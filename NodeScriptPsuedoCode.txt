ðŸ”¸ 1. Function: Delete Data for a Specific Project
FUNCTION deleteProjectData(request, response):
    EXTRACT org_id and projectId from request body

    IF org_id OR projectId is missing:
        RETURN response with status 400 and message "Missing required parameters"

    TRY:
        // Delete from Users collection where org_id AND projectId match
        DELETE all users WHERE org_id = given org_id AND projectId = given projectId

        // Delete from Projects collection where _id matches projectId
        DELETE project WHERE org_id = given org_id AND _id = given projectId

        // Delete from Tasks collection where org_id AND projectId match
        DELETE all tasks WHERE org_id = given org_id AND projectId = given projectId

        // Delete from Files collection where org_id AND projectId match
        DELETE all files WHERE org_id = given org_id AND projectId = given projectId

        // Delete from Notifications collection where org_id AND projectId match
        DELETE all notifications WHERE org_id = given org_id AND projectId = given projectId

        LOG how many documents were deleted in each collection

        RETURN response with status 200 and message "Project-specific data deleted successfully"

    CATCH any errors:
        LOG the error
        RETURN response with status 500 and message "Internal Server Error"

ðŸ”¹ 2. Function: Delete All Data for an Organization
FUNCTION deleteOrgData(request, response):
    EXTRACT org_id from request body

    IF org_id is missing:
        RETURN response with status 400 and message "Missing org_id parameter"

    TRY:
        // Delete from Users collection
        DELETE all users WHERE org_id = given org_id

        // Delete from Projects collection
        DELETE all projects WHERE org_id = given org_id

        // Delete from Tasks collection
        DELETE all tasks WHERE org_id = given org_id

        // Delete from Files collection
        DELETE all files WHERE org_id = given org_id

        // Delete from Notifications collection
        DELETE all notifications WHERE org_id = given org_id

        LOG number of deleted documents from each collection

        RETURN response with status 200 and message "Organization-wide data deleted successfully"

    CATCH any errors:
        LOG the error
        RETURN response with status 500 and message "Internal Server Error"

ðŸ”¹ 3. PostgreSQL Script :-
BEGIN SCRIPT

1. IMPORT required PostgreSQL client library (e.g., 'pg' in Node.js)

2. INITIALIZE connection with PostgreSQL using:
   - Host
   - Port
   - User
   - Password
   - Database name (Mentorgain)

3. CONNECT to the database

4. CREATE SCHEMA:
   - Create 'Users' table with columns: id, name, org_id, project_id
   - Create 'Projects' table with columns: id, title, org_id
   - Create 'Tasks' table with columns: id, title, org_id, project_id
   - Create 'Files' table with columns: id, filename, org_id, project_id
   - Create 'Notifications' table with columns: id, message, org_id, project_id

5. INSERT dummy data (at least 2â€“3 rows per table, with different org_id and project_id values)

6. DEFINE function deleteProjectData(org_id, project_id)
   - For each table (Users, Projects, Tasks, Files, Notifications):
     - DELETE rows WHERE org_id = org_id AND project_id = project_id
     - STORE and LOG the number of rows deleted

7. DEFINE function deleteOrgData(org_id)
   - For each table:
     - DELETE rows WHERE org_id = org_id
     - STORE and LOG the number of rows deleted

8. CALL one of the two deletion functions based on user input or hardcoded value:
   - Example:
     - CALL deleteProjectData('org789', 'proj004')
     - CALL deleteOrgData('org123')

9. PRINT total deletions from each table

10. DISCONNECT from PostgreSQL

END SCRIPT
